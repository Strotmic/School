/*---------------------------------------/*
 # Imports
/*---------------------------------------*/

// import open color
@import 'open-color';
:root {
}
@supports (font-variation-settings: normal) {
  :root {
    font-family: 'Inter var', sans-serif;
  }
}

/*---------------------------------------/*
 # TOOLS
/*---------------------------------------*/

//
// Media Query mixin
// @include mq(#point, #query1, #query2);
//

@mixin mq($breakpoint, $query1: min, $query2: width) {
  $query: map-get($breakpoints, $breakpoint);

  @if $query != null {
    @media (#{$query1}-#{$query2}: #{$query}) {
      @content;
    }
  } @else {
    @media (#{$query1}-#{$query2}: $breakpoint) {
      @content;
    }
  }
}

/*---------------------------------------/*
 # SETTINGS
/*---------------------------------------*/

// ---
// Settings: Colors
// ---

$color-text: $oc-gray-9;
$color-text-light: $oc-gray-7;
$color-text-lighter: $oc-gray-5;

$color-primary: #749674;
$color-primary-light: #8BB08B;
$color-primary-lighter: #C5D9C5;
$color-primary-btn-hover: #E4F2E6;
$color-primary-lightest: #EBF2EF;
$color-primary-dark: #354A35;

$color-border: $oc-gray-2;
$color-border-light: $oc-gray-1;
$color-border-dark: $oc-gray-3;

$color-blauw: #6593fe;
$color-blauw2: rgba($color-blauw, 0.4);

// ---
// Settings: radii
// ---

$radius: 4px;
$radius-m: 6px;
$radius-l: 8px;

// ---
// Settings: Typography
// ---

$root-font-size: 16;

// modular scale ratio
$ratio: 1.125;

// font-sizes
$ms0: 1rem; // 16px
$ms-1: calc($ms0 / $ratio); // 14,2222222222px
$ms-2: calc($ms-1 / $ratio); // 12,6701311556px
$ms1: calc($ms0 * $ratio); // 18px
$ms2: calc($ms1 * $ratio); // 20,25px
$ms3: calc($ms2 * $ratio); // 22.781px
$ms4: calc($ms3 * $ratio); // 25.629px
$ms5: calc($ms4 * $ratio); // 28.833px
$ms6: calc($ms5 * $ratio); // 32.437px
$ms7: calc($ms6 * $ratio); // 36.491px
$ms8: calc($ms7 * $ratio); // 41.053px
$ms9: calc($ms8 * $ratio); // 46.184px
$ms10: calc($ms9 * $ratio); // 51.957px
$ms11: calc($ms10 * $ratio); // 58.452px

$font-family-primary: 'Inter', sans-serif;

// ---
// Settings: Spacing
// ---

// baseline unit
$baseline: calc(8 / $root-font-size * 1rem);

// spacing scale
$space-xxxs: calc($baseline * 0.5); // 4px
$space-xxs: calc($baseline * 1); // 8px
$space-xs: calc($baseline * 1.5); // 12px
$space-s: calc($baseline * 2); // 16px
$space-m: calc($baseline * 3); // 24px
$space-l: calc($space-s * 2); // 32px
$space-xl: calc($space-m * 2); // 48px
$space-xxl: calc($space-l * 2); // 64px
$space-xxxl: calc($space-xl * 2); // 96px

// ---
// Breakpoints
// ---

$breakpoints: (
  bp1: calc(577 / 16 * 1em),
  bp2: calc(769 / 16 * 1em),
  bp3: calc(993 / 16 * 1em),
  bp4: calc(1201 / 16 * 1em),
  bp5: calc(1401 / 16 * 1em),
) !default;

// ---
// Grid
// ---

$container-max-width: calc(1300 / $root-font-size * 1rem);

// The gutter between columns
$grid-gutter: $space-m;
$grid-gutter-s: $space-s;
$grid-gutter-l: $space-l;

// Define the amount of columns in the grid
$columns: (2, 3, 4, 5, 6) !default;

/*---------------------------------------/*
 # GENERIC
/*---------------------------------------*/

*,
*:before,
*:after {
  // Reset box-sizing
  box-sizing: border-box;
}

* {
  // Reset margin and font-size
  padding: 0;
  margin: 0;
  font-size: 100%;
}

img {
  display: block; // make images block level elements
  max-width: 100%; // make images responsive
}

/*---------------------------------------/*
 # ELEMENTS
/*---------------------------------------*/

/*
    Elements: Page
    ---
    Default markup for page level elements
*/

html {
  font-size: calc($root-font-size / 16 * 100%);
  line-height: calc(24 / $root-font-size); // 24px
  font-family: $font-family-primary; // global font-family
  color: $color-text; // global text color
  scroll-behavior: smooth; // smooth scrolling
  background-color: $color-primary-lightest;
}

/*
    Customize the background color and color to match your design.
*/

::selection {
  background: $color-primary-light; // background color
  color: white; // text color
}

/*
    Elements: typography
    ---
    Default markup for typographic elements
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700;
}

h1 {
  font-size: $ms4;
  line-height: calc($baseline * 4);
  margin-bottom: $space-m;
}

h2 {
  font-size: $ms3;
  line-height: calc($baseline * 3);
  margin-bottom: $space-m;
}

h3 {
  font-size: $ms1;
  line-height: calc($baseline * 3);
  margin-bottom: $space-m;
}

h4,
h5,
h6 {
  font-size: $ms0;
  line-height: calc($baseline * 3);
  margin-bottom: $space-m;
}

p,
ol,
ul,
dl,
table,
address,
figure {
  margin-bottom: $space-m;
}

ul,
ol {
  margin-left: $space-m;
}

li ul,
li ol {
  margin-bottom: 0;
}

blockquote {
  font-style: italic;
  font-size: $ms3;
  line-height: calc($baseline * 4);
  margin-bottom: $space-m;
}

figcaption {
  font-size: $ms-1;
  line-height: calc($baseline * 2);
  margin-top: $space-xs;
  color: $color-text-lighter;
}

hr {
  border: 0;
  height: 1px;
  background: $color-border;
  margin-bottom: $space-m;
}

a {
  color: black;
  transition: all 0.1s ease-in-out;
}

a:visited {
  color: $color-primary;
}

a:hover {
  color: $color-primary-dark;
}

a:active {
  color: $color-primary-dark;
}

h2{
  margin-bottom: 0;
}
/*---------------------------------------/*
 # OBJECTS
/*---------------------------------------*/

/*
    Objects: list reset
    ---
    Resets the default list styles
*/

.o-list-reset {
  list-style: none;
  margin-left: 0;
}

/*
    Object: Button reset
    ---
    Small button reset object
*/

.o-button-reset {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: transparent;

  /* inherit font & color from ancestor */
  color: inherit;
  font: inherit;

  /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
  line-height: inherit;

  /* Corrects font smoothing for webkit */
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;

  /* Corrects inability to style clickable `input` types in iOS */
  -webkit-appearance: none;
}

/*
    Objects: Row
    ---
    Creates a horizontal row with padding
*/

.o-row {
  padding: $space-m $space-m 0;
  display: flow-root;
}

.o-row--primary {
  background: $color-primary-dark;
}

.o-row--l {
  @include mq(bp2) {
    padding: $space-xl $space-m $space-m;
  }
}

/*
    Objects: Container
    ---
    Creates a horizontal container that sets de global max-width
*/

.o-container {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: $container-max-width;
  max-width: 90%;
}

/*
    Objects: Section
    ---
    Sections that follow each other get a margin-top
*/

.o-section + .o-section {
  margin-top: $space-m;
}

/*
    Objects: Layout
    ---
    The layout object provides us with a column-style layout system. This object
    contains the basic structural elements, but classes should be complemented
    with width utilities
*/

.o-layout {
  display: flex;
  flex-wrap: wrap;
}

.o-layout__item {
  flex-basis: 100%;
}

/* gutter modifiers, these affect o-layout__item too */

.o-layout--gutter {
  margin-left: calc($grid-gutter / -2);
  margin-right: calc($grid-gutter / -2);
}

.o-layout--gutter > .o-layout__item {
  padding-left: calc($grid-gutter / 2);
  padding-right: calc($grid-gutter / 2);
}

.o-layout--gutter-s {
  margin-left: calc($grid-gutter-s / -2);
  margin-right: calc($grid-gutter-s / -2);
}

.o-layout--gutter-s > .o-layout__item {
  padding-left: calc($grid-gutter-s / 2);
  padding-right: calc($grid-gutter-s / 2);
}

.o-layout--gutter-l {
  margin-left: calc($grid-gutter-l / -2);
  margin-right: calc($grid-gutter-l / -2);
}

.o-layout--gutter-l > .o-layout__item {
  padding-left: calc($grid-gutter-l / 2);
  padding-right: calc($grid-gutter-l / 2);
}

/* reverse horizontal row modifier */

.o-layout--row-reverse {
  flex-direction: row-reverse;
}

/* Horizontal alignment modifiers*/

.o-layout--justify-start {
  justify-content: flex-start;
}

.o-layout--justify-end {
  justify-content: flex-end;
}

.o-layout--justify-center {
  justify-content: center;
}

.o-layout--justify-space-around {
  justify-content: space-around;
}

.o-layout--justify-space-evenly {
  justify-content: space-evenly;
}

.o-layout--justify-space-between {
  justify-content: space-between;
}

/* Vertical alignment modifiers */

.o-layout--align-start {
  align-items: flex-start;
}

.o-layout--align-end {
  align-items: flex-end;
}

.o-layout--align-center {
  align-items: center;
}

.o-layout--align-baseline {
  align-items: baseline;
}

/* Vertical alignment modifiers that only work if there is one than one flex item */

.o-layout--align-content-start {
  align-content: start;
}

.o-layout--align-content-end {
  align-content: end;
}

.o-layout--align-content-center {
  align-content: center;
}

.o-layout--align-content-space-around {
  align-content: space-around;
}

.o-layout--align-content-space-between {
  align-content: space-between;
}

/*------------------------------------*\
  #COMPONENTS
\*------------------------------------*/

/*
  Components: Example
  ---
  This is a comment for a component
*/
a{
  color: black;
}

.c-body {
  width: 90vw;
}

.c-header {
  display: flex;
  justify-content: space-between;
  padding: $space-m;
  border-bottom: 1px solid $color-border-light;
  margin-bottom: $space-m;
  background-color: white;

  @media (max-width: 576px) {
     display: block;
     text-align: center;
  }
  
  
}

.c-nav {
  color: black;
  background-color: white;
  gap: $space-l;
  font-weight: regular;
  font-size: $ms-1;


  &--link {
    text-decoration: none;
    color: $color-primary;
    &--active{
      color: $color-primary-dark;
    }
  }

  &--link:hover {
    color: $color-primary;
  }

  &--link:visited {
    color: $color-primary;
  }


  &--title{
    @media (max-width: 576px) {
       display: block;
    }
    
  }
  @media (max-width: 576px) {
    flex-direction: column;
    text-align: center;
    gap: 0.5rem;
  }
}

.c-tac2{
  text-align: center;
}

.c-tac{
  @media (max-width: 576px) {
     text-align: center;
  
  }
  
}

.c-categorie {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
  flex-wrap: wrap;

  &--item {
    background: $color-primary-light;
    padding: 1rem;
    border-radius: 1rem;
    flex-basis: calc(33% - 1rem);
    height: 13.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    @media (max-width: 801px) {
      flex-basis: calc(50% - 1rem);
    }

  @media (max-width: 768px) {
     flex-basis: calc(100%);
  }
  }
  &--text {
    margin: 0;
    text-decoration: none;
    color:black;
    font-size: $ms6;
  }&--text:visited{
    color: black;
  }&--text:hover{
    color: $color-primary-dark;
  }

  
}

.c-container {
  max-width: 90vw;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1rem;
}

.c-table {
  background-color: white;
  padding: 2rem 3rem;
  border: 1px solid $color-border-dark;
  &--row {
    padding: 0.75rem;
    border-radius: 0.5rem;
    border: 1px solid $color-border-dark;
    margin-bottom: 1rem;
    display: flex;
    justify-content: space-between;

    @media (max-width: 576px) {
       flex-direction: column;
    }
    
  }

  &--row2 {
    padding: 0.75rem;
    border-radius: 0.5rem;
    border: 1px solid $color-border-dark;
    margin-bottom: 1rem;

    @media (max-width: 576px) {
       flex-direction: column;
    }
    
  }

  &--text {
    margin-bottom: 0;

    @media (max-width: 576px) {
       text-align: center;
       border-bottom: 1px solid $color-border-dark;
       margin-bottom: 0.5rem;
    }
    
  }
  &--add{
    text-align: center;
    color: black;
    text-decoration: none;
  }

  &--add:visited{
    color: black;
  }

  &--btn{
    padding: 0.5rem;
    background-color: $color-primary-light;
    border-radius: 0.5rem;
    text-decoration: none;
  }
  &--btn:visited{
    color: black;
  }

  &--btn:hover{
    background-color: $color-primary-lightest;
  }

  &--btn>a{
    text-decoration: none;
    color: black;
  }
}

.c-smartphone{
  @media (max-width: 576px) {
     display: flex;
     justify-content: space-between;
  }
  
}

.c-tabel{
  margin-bottom: 2rem;
}

.c-detail{
  width: 100%;

text-align: right;
}

.c-histogram{
  max-width: 90%;
  @media (max-width: 576px) {
     max-width: 99%;
     font-size: 0.5rem;
  }
  
}

.c-pie{
  max-width: 95%;
  @media (max-width: 576px) {
     max-width: 99%;
     font-size: 0.3rem;
  }
  
}


.c-header-login{
  text-align: center;
  padding: 2rem;
  background-color: $color-primary-light;

  &--title{
    margin: 0;
    font-size: $ms8;
    color: black;
  }

  &--link{
    color:black;
    text-decoration: none;
  }
  &--link:visited{
    color: black;
  }
  &--register{
    color: black;
    text-decoration: none;
    font-size: $ms5;
    margin-bottom: 0;
  }
  &--register:visited{
    color: black;
  }
}
.c-loginpage{
  margin-top: 4rem;
  height: 100%;
  display: flex;
  justify-content: center;
  vertical-align: center;
}
.c-login{
  padding: 2rem;
  border-radius: 1rem;
  background-color: $color-primary-light;
  &--title{
    margin: 0;

  }
  &--text{
    margin:0;
  }
}

.c-popup {
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
    display: none;
}

.popup-content {
    display: flex;
    gap:1rem;
    border-radius: 1rem;
    background-color: white;
    margin: 10% auto;
    padding: 4rem;
    border: 1px solid #888888;
    width: 50%;
    font-weight: bolder;
    justify-content: space-around;
    &--btn{
      border-radius: 1rem;
      padding: 1rem;
      background-color: $color-primary-light;
      color: black;
    }
    &--btn:hover{
      color:$color-primary-dark;
      background-color: $color-primary-btn-hover;
    }
    
}

.popup-content button {
    display: block;
    margin: 0 auto;
}

.show {
    display: block;
}

.c-form{
  background: white;
  padding: 1rem;
  border: 1px solid $color-border-dark;
  border-radius: 1rem;
  margin: 1rem;
  display: flex;
  max-width: 90%;
  justify-content: space-between;

  @media (max-width: 768px) {
     flex-direction: column;
  }
  
}
.c-formBtnDiv{
  text-align: center;
}
.c-formBtn{
  text-align: center;
  padding: 1rem;
  background-color: white;
  border-radius: 1rem;
  border: 1px solid $color-border-dark;
}
// __________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________
//____________________________________

.c-nav-title {
  text-decoration: none;
  &:hover {
    color: $color-primary;
  }
}

.c-img {
  border-radius: $space-xxs;
}

.c-header2 {
  &--p {
    color: $color-text-lighter;
    font-size: $ms-1;
    margin-bottom: $space-xs;
  }

  &--h1 {
    font-size: $ms10;
    margin-bottom: $space-xs;

    @media (max-width: 992px) {
      font-size: $ms7;
    }

    @media (max-width: 576px) {
      font-size: $ms4;
    }
  }
}
.c-divMain {
}

.c-mainF {
  flex-basis: calc(30%);
  @media (max-width: 768px) {
    flex-basis: 100%;
  }
}

.c-tickets {
  border: 1px solid $color-border-light;
  padding: $space-m $space-m $space-xs $space-m;
  border-radius: $space-xs;

  &--btn {
    width: 100%;
    margin-top: 1rem;
    margin-bottom: 0;
    padding-top: 10px;
    color: white;
    background-color: $color-primary;
    border-radius: $space-xxs;
    border: none;
    padding-bottom: 10px;
  }

  @media (max-width: 768px) {
    margin-bottom: 2rem;
  }
}

.c-mainT {
  flex-basis: calc(70%);

  @media (max-width: 768px) {
    flex-basis: 100%;
  }
}

.c-blauw {
  border: 1px solid $color-blauw;
  box-shadow: 0 0 0 3px $color-blauw2;

  padding: $space-s;
  border-radius: $space-xs;

  &--strong {
    color: $color-blauw;
  }

  &--text {
    color: $color-text-lighter;
    font-size: $ms-1;
    margin-bottom: 0;
  }
}

.c-aside {
  background: $color-border-light;
  padding: $space-m;
  border-radius: 8px;
  width: 70%;
  &--img {
    width: 40px;
    height: auto;
    margin-right: $space-xxs;
  }

  &--figure {
    height: 40px;
  }

  &--btn {
    padding: $space-s $space-m;
    background-color: $color-blauw;
    border: none;
    color: white;
    border-radius: $space-xxs;
  }

  @media (max-width: 992px) {
    width: 99%;
  }
}

.c-aside2 {
  margin-top: $space-xl;
  width: 70%;
  @media (max-width: 992px) {
    width: 99%;
  }
}

.c-where {
  margin-bottom: $space-xl;
  flex-basis: 49%;
  &--fig {
    border-radius: $space-xxxs;
    padding: $space-xxs;
    background-color: $color-border-light;
    color: $color-blauw;
    height: auto;
    height: 40px;
    margin-right: $space-s;
  }

  &--svg {
    fill: $color-blauw;
  }
  @media (max-width: 340px) {
    flex-basis: 100%;
  }
}

.c-when {
  &--text {
    color: $color-text-lighter;
  }
}
/*---------------------------------------/*
 # UTILITIES
/*---------------------------------------*/

/*
    Utilities: Colors
    ---
    Utility classes to set the color of an element
*/

.u-color-text-light {
  color: $color-text-light;
}

.u-color-text-lighter {
  color: $color-text-lighter;
}
/*
    Utilities: Max widths
    ---
    max-width utility classes
*/

.u-max-width-s {
  max-width: calc(600 / 16 * 1rem);
}

.u-max-width-m {
  max-width: calc(960 / 16 * 1rem);
}

.u-max-width-l {
  max-width: calc(1400 / 16 * 1rem);
}

/*
    Utitlities: whitespace
    ---
    Utility classes to put specific margins and padding onto elements
*/

.u-pt-clear {
  padding-top: 0;
}

.u-mb-clear {
  margin-bottom: 0;
}

.u-mb-s {
  margin-bottom: $space-s;
}

.u-mb-xs {
  margin-bottom: $space-xs;
}

/*
  Utilities: Font size
  ---
  Font size utility classes
*/

.u-ms-1 {
  font-size: $ms-1;
  line-height: calc($baseline * 3);
}

/*
    Utilities: Widths
    ---
    Width utility classes
*/

.u-flex-basis-auto {
  flex-basis: auto;
}

// Loop through the different columns
@each $column in $columns {
  // Generate the grid classes
  @each $denominator, $numerator in $column {
    // Begin creating a numerator for our fraction up until we hit the
    // denominator.
    @for $numerator from 1 through $denominator {
      // Build a class in the format `.u-4-of-6`
      .u-#{$numerator}-of-#{$denominator} {
        flex-basis: calc(($numerator / $denominator) * 100%) !important;
      }
    }
  }
}

// Loop through the different breakpoints
@each $breakpoint, $value in $breakpoints {
  @include mq($value) {
    // Loop through the different columns
    @each $column in $columns {
      // Generate the grid classes
      @each $denominator, $numerator in $column {
        // Begin creating a numerator for our fraction up until we hit the
        // denominator.
        @for $numerator from 1 through $denominator {
          // Build a class in the format `.u-4-of-6-bp1`
          .u-#{$numerator}-of-#{$denominator}-#{$breakpoint} {
            flex-basis: calc(($numerator / $denominator) * 100%) !important;
          }
        }
      }
    }
  }
}

table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td,
th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {
  background-color: #dddddd;
}

// div{
//   border: 1px solid black;
//   padding: 0.5rem;
// }

// .grafiek{
//   border: none;
// }

// a{
//   color: black;
//   text-decoration: none;
//   &:hover{
//     color: red;
//   }
// }
